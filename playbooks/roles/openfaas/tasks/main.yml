- name: create openfaas-config folder
  file:
    path: '{{ vagrant_home }}/openfaas-config'
    state: directory
    mode: 0755

- name: get faas-cli installer
  get_url:
    url: https://cli.openfaas.com
    dest: '{{ vagrant_home }}/openfaas-config/cli.sh'

- name: change permissions of installer
  file:
    path: '{{ vagrant_home }}/openfaas-config/cli.sh'
    state: file
    mode: 0777

- name: install faas-cli
  shell: '{{ vagrant_home }}/openfaas-config/cli.sh > {{ vagrant_home }}/faas-cli'
  args:
    executable: /bin/bash

- name: copy faas-cli binary
  become: true
  copy:
    src: '{{ vagrant_home }}/faas-cli'
    dest: '{{ faas_cli_install_target }}'
    mode: 0755
    remote_src: yes

- name: remove unnecessary files
  file:
    path: '{{ vagrant_home }}/{{ item }}'
    state: absent
  with_items:
    - faas-cli
    - openfaas-config/cli.sh

- name: add namespaces for openfaas services
  shell:
    cmd: |
      cat << EOF > {{ vagrant_home }}/openfaas-config/namespaces.yml
      ---
      apiVersion: v1
      kind: Namespace
      metadata:
        name: openfaas
        labels:
          role: openfaas-system
          access: openfaas-system
          istio-injection: enabled
      ---
      apiVersion: v1
      kind: Namespace
      metadata:
        name: openfaas-fn
        labels:
          istio-injection: enabled
          role: openfaas-fn
      EOF
      kubectl apply -f {{ vagrant_home }}/openfaas-config/namespaces.yml

- name: add faas-netes helm repo
  shell: helm repo add openfaas https://openfaas.github.io/faas-netes/
  args:
    executable: /bin/bash
  retries: 10

- name: update helm repo
  shell: helm repo update
  args:
    executable: /bin/bash
  retries: 10

- name: check openfaas release status
  shell: helm ls --all -n openfaas | awk -F '\t' 'FNR > 1 { if ( $1 == "openfaas" && $4 == "DEPLOYED" ) print "present"; else print "absent"; }'
  args:
    executable: /bin/bash
  retries: 10
  register: release_status

- debug:
    msg: "{{ release_status }}"

- name: install openfaas in the cluster
  shell: |
      helm upgrade --install openfaas --wait openfaas/openfaas \
      --version {{ openfaas_chart_version }} \
      --namespace openfaas \
      --set functionNamespace=openfaas-fn \
      --set basic_auth=false \
      --set generateBasicAuth=false \
      --set gateway.nodePort={{ openfaas_gateway_port }} \
      --set operator.create=true
  args:
    executable: /bin/bash
  retries: 3
  delay: 10
  when: (release_status.stdout == "absent") or
        (release_status.stdout == "" and release_status.stderr == "")

- name: install grafana for openfaas
  shell:
    cmd: |
      cat << EOF > {{ vagrant_home }}/openfaas-config/grafana.yml
      ---
      apiVersion: v1
      kind: Service
      metadata:
        name: grafana
        labels:
          run: grafana
      spec:
        type: NodePort
        ports:
        - port: 3000
          targetPort: 3000
          nodePort: {{ grafana_node_port }}
        selector:
          run: grafana
      ---
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        name: grafana
      spec:
        selector:
          matchLabels:
            run: grafana
        replicas: 1
        template:
          metadata:
            labels:
              run: grafana
          spec:
            containers:
            - name: grafana
              image: {{ grafana_image }}
              ports:
              - containerPort: 3000
      EOF
      kubectl apply -n openfaas -f {{ vagrant_home }}/openfaas-config/grafana.yml
  args:
    executable: /bin/bash
